Flask是一个基于Python实现的web开发的'微'框架

flask 架构

	应用模块：Flask 的核心模块，是整个 Web 应用程序的入口，负责接收 HTTP 请求并返回响应。它还负责路由、错误处理、上下文等功能。

	路由模块：Flask 使用装饰器来定义 URL 路由和视图函数之间的映射关系。

	视图模块：视图函数是 Flask Web 应用程序的核心，它处理 HTTP 请求并返回响应，可以返回 HTML 页面、JSON 数据等。

	模板模块：Flask 使用 Jinja2 模板引擎来生成 HTML 页面。模板引擎提供了丰富的语法和过滤器，可以轻松地生成复杂的 HTML 页面。

	数据库模块：Flask 可以轻松地与多种数据库集成，包括 MySQL、PostgreSQL、SQLite 等。

	表单模块：Flask-WTF 是 Flask 的表单处理扩展，提供了方便的表单处理方法，可以轻松地创建表单、验证表单数据等。

	扩展模块：Flask 的扩展模块提供了各种功能，如邮件发送、缓存、登录认证等。


HTTP方法
	GET。用于从服务器获取资源。在Web浏览器中输入URL并按下Enter键时，使用的就是GET方法。GET请求会将请求参数附加在URL后面，以“?”符号分隔。
	
	POST。用于向服务器发送数据。在使用表单进行数据提交时，通常使用POST方法。POST请求将请求参数放在请求体中，而不是附加在URL上。

	PUT。用于更新服务器上的资源。PUT请求会将请求参数放在请求体中，并使用一个唯一标识符来指定要更新的资源。
	
	DELETE。用于从服务器删除资源。DELETE请求将一个唯一标识符作为参数，用于指定要删除的资源。

	HEAD。类似于GET方法，但服务器在响应中只返回HTTP头部信息，而不返回实际数据。HEAD请求常用于检查链接的有效性。

	OPTIONS。用于获取目标资源支持的通信选项。OPTIONS请求可以用于确定服务器的能力，例如它支持哪些HTTP方法以及其他服务器的性能信息。

	TRACE。用于进行消息回环测试。TRACE请求会返回服务器接收到的原始请求，包括所有的中间件和代理服务器。

Cookies 作用
	session的管理，用来保存登录状态，从而让HTTP请求可以带上状态信息。

	用户自定义的设置，这些用户特殊的字段，需要保存在cookies中。

	跟踪用户的行为信息。
