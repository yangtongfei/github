docker 的出现实现跨平台或服务器的程序可以使用，docker将在这个平台的程序的所有环境等配置打包一起移植到，另一个平台就不会出现环境或配置导致程序无法运行的问题

docker 理念，解决运行环境和配置问题的软件容器，方便做持续集成并有助于整体发布的容器虚拟化技术


docker 导入导出
	docker export "要导出的镜像名或ID" > "要导出到的文件名或位置".tar  将整个容器复制打包到主机上
	cat “已打包的文件名".tar |docker import - "自定义用户"/"自定义镜像名":"自定义版本号" 


docker 在镜像上添加东西，再将添加后的镜像保存为一个新镜像
	docker commit -m="新镜像的描述信息" -a="作者名" "原镜像名或ID" "新镜像名":"版本号"


创建和启动一个私服库
	docker pull registry	先拉取这个镜像

	docker run -d -p "设置本地主机端口号，如5000":"设置容器端口，如5000" -v '本地要创建的存放私服库的目录':'容器设置存放私服库的目录' --privileged=true registry	
	启动registry镜像，-d让镜像在后台运行，-p是指定端口号, -v是挂载的意思, "--privileged=true"是获取权限,达到在私服库拥有root权限作用


docker 把镜像添加到私服库
	docker tag "镜像名":"版本号" "docker的ip地址（用ifconfig可以查到）:"设定registry的端口号"/"镜像名":"版本号"		先将镜像文件修改为私服库规定的格式

	docker默认不支持http形式的推送,需要修改/etc/docker/daemon.json配置文件，将"insecure-registries": ["dockerIP地址"]写入配置文件，如果在添加这条命令前还有其他命令，需要在上面命令的末尾加上,

	docker push "镜像名":"版本号" 	推送到私服库

查看私服库
	curl -XGET http://"docker的IP地址":"启用的端口号"/v2/_catalog
	
	docker pull "镜像名":"版本号"  从私服库上拉取镜像


docker 容器数据卷
	容器数据卷可实时将容器里的数据，拷贝到本地主机的容器卷位置
	docker run -it --privileged=true -v "本地主机挂载位置，如(/tmp/host_data)":"docker镜像容器挂载位置(/tmp/docker_data)" --name="容器名"(--name参数可不写) "镜像名"  创建一个容器的数据卷
	
	docker inspect “容器名或ID” 查看目录是否挂载成功
	
	将容器改为只读
	docker run -it --privileged=true -v "本地主机挂载位置":"docker镜像容器挂载位置":ro --name="容器名"(--name参数可不写) "镜像名"  在docker镜像容器挂载位置后加上:ro就设置为容器只读,就不可以在挂载的目录下写
	
	容器数据卷的继承和共享
	docker run -it --privileged=true --volumes-from "要继承的容器名或ID，如(u1)" --name="新容器名" "镜像名"  只继承父类挂载的数据卷的数据和权限 
	
	运行镜像时一定要挂载容器数据卷，防止数据丢失


tomcat 启动
	docker run -d -p 8080:8080 --name=t1 tomcat  最新版的tomcat需要进入容器将webapps删除，修改webapps.dist为webapps，mv webapps.dist webapps, 旧版不需要更改

mysql 启动	
	简单启动 docker run -p 3306:3306 -e MYSQL_ROOT_PASSWORD="root密码设置" -d mysql
	常规启动 docker run -p 3306:3306 --privileged=true  
			-v /“本地数据卷位置”(如/zzyyuse/mysql/log):/var/log/mysql	日志文件
			-v /"本地数据卷位置":/var/lib/mysql 						容器数据
			-v /"本地数据卷位置":/etc/mysql/conf.d  					配置文件
			-e MYSQL_ROOT_PASSWORD="root密码设置"
			--name=m1(可不加--name 参数)
			-d mysql:"版本号"(最新版mysql可省略版本号)

	进入容器 docker exec -it "容器名" bash 		登录mysql   mysql -u root -p

	mysql需要在本地数据卷配置文件,假如在本地的配置文件数据卷是/zzyyuse/mysql/conf,
	则需要在conf目录下添加my.cnf文件，文件内容为：
|	|	|	|	|	|	|	|	|	|	|	|	|	|	|
V	V	V	V	V	V	V	V	V	V	V	V	V	V	V
[client]
default_character_set=utf8
[mysqld]
collation_server = utf8_general_ci
character_set_server = utf8
/\	/\	/\	/\	/\	/\	/\	/\	/\	/\
||	||	||	||	||	||	||	||	||	||
	添加该文件，使mysql支持utf8编码，就可以用中文

redis 启动
	简单启动 docker run -d -p 6379:6379 redis

	登录redis  redis-cli


docker自定义镜像脚本
	制作镜像脚本需要，创建一个目录，进入该目录，编写名为Dockerfile的文件，镜像脚本需要写进Dockerfile文件里 
	github,gitee仓库有具体制作脚本模板
	docker build -t "自定义镜像名":"版本号" . 	脚本写好后用这个命令运行,"."代表运行当前文件下的Dockerfile脚本文件

docker镜像脚本命令

	FROM	基础镜像，当前新镜像是基于哪个镜像的，指定一个已经存在的镜像作为模板，第一条必须是FROM 

	MAINTAINER	镜像维护者的名字和邮箱地址，可不写

	RUN	容器构建时需要运行的命令，如RUN echo "hello world",两种格式，shell格式等同于在终端操作的命令， exec格式RUN["可执行文件如./test.php","参数","参数"], 等价于RUN ./test.php 参数 参数,RUN是在docker build时运行

	EXPOSE	当前容器对外暴露出的端口

	WORKDIR 指定在创建容器后，终端默认登陆进来的工作目录，一个落脚点

	USER	指定该镜像以什么用户去执行，如果不指定，默认是root

	ENV	在构建镜像过程中设置环境变量

	ADD	将主机目录下的文件复制到镜像，而且会自动处理URL和解压tar压缩包

	COPY 复制文件或目录到镜像中

	VOLUME 容器数据卷，设置容器数据卷挂载

	CMD 指定容器启动后要干的事情，指令格式和RUN相似，也支持shell和exec格式，dockerfile可以有多个CMD指令，但只有最后一个生效，CMD会被docker RUN 之后的参数替换，CMD在docker RUN时运行，RUN是在docker build时运行

	ENTRYPOINT 容器启动时要干的事情，类似CMD ， 但ENTRYPOINT不会被docker RUN后面的命令覆盖，而且这些命令参数会被当作参数送给ENTRYPOINT指令指定的程序


docker 网络模式
	
	bridge 为每一个容器分配，设置IP等，并将容器连接到一个docker0，虚拟网桥，默认为该模式
	
	host 容器将不会虚拟出自己的网卡，配置自己的IP等，而是直接使用宿主机的IP和端口
	
	none 容器有独立的network namespace，但并没有对其进行任何网络设置，如分配veth pair和网桥连接，IP等
	
	container	新创建的容器不会创建自己的网卡和配置自己的IP，而是和一个指定的容器共享IP，端口范围等
	
	docker 自定义网络 
		docker network ls 查看有什么网络模式
		docker network rm "网络名" 删除网络
		docker network create "自定义网络名"
		两个镜像在自定以网络里可以互相ping通镜像名	


docker-compose 概念
	docker-compose 管理docker容器
	
dokcer portainer的启动
	docker run -d -p 8000:8000 -p 9000:9000 --name portainer --restart=always --privileged=true -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer	
	挂入后台之后，进入浏览器数据IP加上9000端口，输入用户名：admin,和密码即可登陆,必须加入--privileged=true命令，否则会出现权限不足问题,导致无法进入
