Git命令

Git仓库初始化
	安装git后，新建一个目录，进入该目录使用git init命令


查看仓库当前状态
	git status


查看文件具体修改内容
	git diff "filename"


添加文件到Git仓库
	先在目录下编辑一个文件， 然后使用git add "filename"命令 可添加多个文件
	再用git commit -m "本次提交文件的说明" 


查看历史记录
	git log


查看历史命令
	git reflog


版本回退
	git reset --hard HEAD^(一个^代表回退一个版本，回退一百个版本可以这样写HEAD~100)
	git reset --hard "指定版本号码"

	版本回退后可通过 git reflog 查看历史使用的命令找到, 版本回退前的版本号
	
	丢弃工作区的修改
                git checkout "filename" 把文件在工作区的修改全部撤销，有两种情况

                1.文件修改后还没有放到暂存区，现在撤销修改就回到和版本库一模一样的状态
              	2.文件已经添加到暂存区，又作了修改，现在撤销就回到添加到暂存区后的状态


链接远程仓库
	git remote add "添加远程库名字" git@github.com:"github账户名"/"远程仓库名".git 	 本地仓库和远程仓库关联
	
	git push -u "远程库名" master	第一次推送，加上-u参数，以后推送可以直接这样 git push "name" master
	

删除与远程仓库的链接
	git remote -v 查看远程库信息
	
	git remote “name” 根据名字删除与远程库的链接


克隆远程仓库到本地
	克隆仓库需要，先创建远程仓库
	git clone git@github.com:"github帐号名字"/"要克隆的仓库名".git


分支
	创建和切换分支
		git branch "分支名"					创建一个新分支, 不加入参数就是查看所有分支, * 号代表当前分支
		git checkout "分支名"	 或 git switch "分支名" 	切换分支
		git checkout -b "分支名" 或 git switch -c "分支名"	上面两个命令的结合，创建分支并切换
	
	合并分支
		先切换要合并到的分支, 假如有 dev这个新建的分支， 在该分支完成工作后，切换到主分支master后，使用命令git merge dev 完成合并dev分支到maseer
		git merge "分支名"
		
		合并分支模式
			正常合并会使用 Fast forward 模式， 但这种模式下，删除分支后，会丢掉分支信息

			强制禁用 Fast forward 模式 git 会在合并的时候生成一个新的commit，所以要在强制禁用Fast forward模式里 加入commit 的"-m" 参数
			
			git merge --no-ff -m "文件说明commit描述" dev 	
		
	删除分支
		git branch -d "分支名"	完成删除分支
	
保存现场
	git stash 	保存当前修改现场
	git stash list	查看保存的现场
	git stash apply 恢复现场，恢复后stash内容不删除，需要git stash drop删除
	git stash pop	恢复现场，并且删除stash内容

